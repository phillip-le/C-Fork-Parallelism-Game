#ifndef PLAYER_H
#define PLAYER_H

#include "deck.h"
#include "path.h"

#define STARTING_MONEY 7

// Indexes used for decoding dealer messages about player moves.
#define PLAYER_ID_INDEX 0
#define NEW_SITE_INDEX 1
#define POINTS_INDEX 2
#define MONEY_INDEX 3
#define CARD_INDEX 4

typedef struct {
    int pid;
    int money;
    // Number of V1 sites visited so far
    int V1;
    // Number of V2 sites visited so far
    int V2;
    int points;
    int currentSite;
    Deck* deck;
} Player;

typedef struct {
    int gid;
    int playerCount;
    Player** players;
    Path* path;
} PlayerGame;

Player* init_player(int pid);
PlayerGame* init_player_game(int pid, int playerCount, char* pathString);

void free_player(Player* player);
void free_player_game(PlayerGame* playerGame);
bool valid_move(Path* path, int currentSite, int destSite);

void move_player(Path* path, int pid, int destSite);

void send_player_update(Path* path, Player* player, int destSite, 
        CARDS nextCard);

void write_player_update(int* updateInfo);

int* get_player_update(Path* path, Player* player, int destSite, 
        CARDS nextCard);

void update_player(Path* path, Player* player, int* updateInfo);
void print_player_update(FILE* file, Player* player);

int* read_player_update(PlayerGame* playerGame, char* update);

void recv_player_update(PlayerGame* playerGame, char* update);

int get_playerA_move(Path* path, Player* player);

#endif